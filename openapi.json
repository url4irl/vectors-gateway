{
  "openapi": "3.1.0",
  "info": {
    "title": "Vectors Gateway API",
    "version": "1.0.0",
    "description": "Abstraction over LiteLLM (embeddings) and Qdrant (vector search)."
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns the status of the Vectors Gateway with API documentation and endpoint information",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Service is running"
          }
        }
      }
    },
    "/v1/embeddings": {
      "post": {
        "summary": "Create embeddings (LiteLLM/OpenAI-compatible)",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": { "type": "string", "example": "openai/bge-m3:latest" },
                  "input": { "oneOf": [ { "type": "string" }, { "type": "array", "items": { "type": "string" } } ] },
                  "user": { "type": "string", "description": "User ID for tracking and data isolation" }
                },
                "required": ["model", "input", "user"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Embedding list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object": { "type": "string", "example": "list" },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "object": { "type": "string", "example": "embedding" },
                          "index": { "type": "integer" },
                          "embedding": { "type": "array", "items": { "type": "number" } }
                        }
                      }
                    },
                    "model": { "type": "string" },
                    "usage": {
                      "type": "object",
                      "properties": {
                        "prompt_tokens": { "type": "integer" },
                        "total_tokens": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/retrieval/search": {
      "post": {
        "summary": "Semantic search using Qdrant",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": { "type": "string", "description": "Search query" },
                  "userId": { "type": "integer", "description": "User ID for tracking and data isolation" },
                  "knowledgeBaseId": { "type": "integer", "description": "Knowledge base ID for data isolation" },
                  "documentId": { "type": "integer", "description": "Optional document ID to search within a specific document" },
                  "limit": { "type": "integer", "default": 10, "description": "Maximum number of results" },
                  "score_threshold": { "type": "number", "default": 0.7, "description": "Minimum similarity score" }
                },
                "required": ["query", "userId", "knowledgeBaseId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "query": { "type": "string" },
                    "matches": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "score": { "type": "number" },
                          "payload": { "type": "object" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/documents/{documentId}": {
      "delete": {
        "summary": "Remove a document from a knowledge base",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "API key for authentication"
          },
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the document to remove"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": { "type": "integer", "description": "User ID for tracking and data isolation" },
                  "knowledgeBaseId": { "type": "integer", "description": "Knowledge base ID for data isolation" }
                },
                "required": ["userId", "knowledgeBaseId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document successfully removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Document successfully removed" },
                    "documentId": { "type": "integer" },
                    "knowledgeBaseId": { "type": "integer" },
                    "userId": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields or invalid documentId",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing or invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key for authentication. Can also be provided via Authorization header as 'Bearer <key>'"
      }
    }
  }
}
